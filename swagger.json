{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Welcome to Node Oauth2 Express Server",
    "description": "Outh2_express_node is a project based on outh 2.0. The credentials is authorisede and will generate a access-token using outh 2.0.\n The access-token in this case is the primary suppliment to the API that will authorise a user and give sccess to the API.\n The scope of the access-token is also be checked to access that API.\n\n **For more details on this project , please visit this [file](https://github.com/thezaidsheikh/Outh-Product-NodeJS-cz/blob/master/README.md)**.\n\n First _Register_ and then Login using _Authorize_, It will automatically generate access-token and in every API this access-token is automatically passed in header. "
  },
  "host": "localhost:5000",
  "basePath": "",
  "tags": [
    {
      "name": "AuthUsers",
      "description": "API for the User related operations (_Any User_).  _**Find out more about [AuthUser](https://github.com/thezaidsheikh/Node-Oauth2-Express-Server/blob/master/README.md#Auth-User) API**_."
    },
    {
      "name": "Category",
      "description": "API for the Category related operations (_Only Admin_).  _**Find out more about [Category](https://github.com/thezaidsheikh/Outh-Product-NodeJS-cz/blob/master/README.md#Category) API**_."
    },
    {
      "name": "Product",
      "description": "API for the Product related operations.  _**Find out more about [Product](https://github.com/thezaidsheikh/Outh-Product-NodeJS-cz/blob/master/README.md#Product) API**_."
    },
    {
      "name": "Scope",
      "description": "API for the Scope related operations (_Only Admin_).  _**Find out more about [Scope](https://github.com/thezaidsheikh/Outh-Product-NodeJS-cz/blob/master/README.md#Scope) API**_."
    },
    {
      "name": "User Cart",
      "description": "API for the User Cart related operations (_Any User_).  _**Find out more about [User Cart](https://github.com/thezaidsheikh/Outh-Product-NodeJS-cz/blob/master/README.md#User-Cart) API**_."
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/x-www-form-urlencoded"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "AuthUsers"
        ],
        "description": "Register a new user.",
        "parameters": [
          {
            "name": "username",
            "in": "formData",
            "type": "string",
            "required": true,
            "description": "username of the user."
          },
          {
            "name": "password",
            "in": "formData",
            "type": "string",
            "required": true,
            "description": "password of the user."
          },
          {
            "name": "phone",
            "in": "formData",
            "type": "number",
            "required": true,
            "example": 1234567890,
            "description": "phone number of the user."
          },
          {
            "name": "isAdmin",
            "in": "formData",
            "type": "boolean",
            "required": false,
            "default": false,
            "description": "true to create admin user, else false."
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfull.",
            "schema": {
              "$ref": "#/definitions/user_response"
            }
          }
        }
      }
    },
    "/categories/create_category": {
      "post": {
        "tags": [
          "Category"
        ],
        "description": "Create Category for the Product",
        "security": [
          {
            "oauth_login": []
          }
        ],
        "parameters": [
          {
            "name": "category_name",
            "in": "formData",
            "type": "string",
            "required": true,
            "example": "Vehicles",
            "description": "add category name"
          },
          {
            "name": "category_description",
            "in": "formData",
            "type": "string",
            "required": true,
            "example": "Contain cars and bike",
            "description": "description about category."
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfull",
            "schema": {
              "$ref": "#/definitions/user_response"
            }
          }
        }
      }
    },
    "/products/create_product": {
      "post": {
        "description": "Add a new Product (_Only Admin_).",
        "tags": [
          "Product"
        ],
        "security": [
          {
            "oauth_login": []
          }
        ],
        "parameters": [
          {
            "name": "product_name",
            "in": "formData",
            "type": "string",
            "required": true,
            "description": "add product name"
          },
          {
            "name": "product_description",
            "in": "formData",
            "type": "string",
            "required": true,
            "description": "description about product."
          },
          {
            "name": "product_price",
            "in": "formData",
            "type": "number",
            "required": true,
            "description": "price of the product."
          },
          {
            "name": "product_category_id",
            "in": "formData",
            "type": "string",
            "required": true,
            "description": "category of the product."
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfull",
            "schema": {
              "$ref": "#/definitions/user_response"
            }
          }
        }
      }
    },
    "/products/delete_product": {
      "delete": {
        "description": "Delete a Product (_Only Admin_).",
        "tags": [
          "Product"
        ],
        "security": [
          {
            "oauth_login": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "insert product id to delete"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfull",
            "schema": {
              "$ref": "#/definitions/user_response"
            }
          }
        }
      }
    },
    "/products/getProductByProductId": {
      "get": {
        "description": "Delete a Product (_Any User_).",
        "tags": [
          "Product"
        ],
        "security": [
          {
            "oauth_login": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "insert product id to find"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfull",
            "schema": {
              "$ref": "#/definitions/user_response"
            }
          }
        }
      }
    },
    "/scopes/addScope": {
      "post": {
        "tags": [
          "Scope"
        ],
        "description": "Add a new Scope. If scopeNumber is already exists then update.\n **Currently three Api's have scope check, which is already defines in permissions**",
        "security": [
          {
            "oauth_login": []
          }
        ],
        "parameters": [
          {
            "name": "scopeNumber",
            "in": "formData",
            "type": "string",
            "required": true,
            "example": "A",
            "description": "define any scope name"
          },
          {
            "name": "permissions",
            "in": "formData",
            "type": "array",
            "required": true,
            "example": "post 'http://localhost:5000/user_carts/addProductToUserCart'",
            "description": "define a scope permissions.",
            "uniqueItems": true,
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfull",
            "schema": {
              "$ref": "#/definitions/user_response"
            }
          }
        }
      }
    },
    "/user_Carts/addProductToUserCart": {
      "post": {
        "tags": [
          "User Cart"
        ],
        "description": "Add a Product in user cart.",
        "security": [
          {
            "oauth_login": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "formData",
            "type": "string",
            "required": true,
            "example": "5f3fd3a4b6f932484ed2469b",
            "description": "insert userId"
          },
          {
            "name": "product_id",
            "in": "formData",
            "type": "string",
            "required": true,
            "example": "5f3fd3a4b6f932484ed2469b",
            "description": "insert product_id."
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfull",
            "schema": {
              "$ref": "#/definitions/user_response"
            }
          }
        }
      }
    },
    "/user_Carts/getAllProductOfUserByUserId": {
      "get": {
        "tags": [
          "User Cart"
        ],
        "description": "Get all product that a user has added in its cart.",
        "security": [
          {
            "oauth_login": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "required": true,
            "example": "5f3fd3a4b6f932484ed2469b",
            "description": "insert userId"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfull",
            "schema": {
              "$ref": "#/definitions/user_response"
            }
          }
        }
      }
    },
    "/user_Carts/deleteProductFromUserCart": {
      "delete": {
        "tags": [
          "User Cart"
        ],
        "description": "Delete a product from the use cart.",
        "security": [
          {
            "oauth_login": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "type": "string",
            "required": true,
            "example": "5f3fd3a4b6f932484ed2469b",
            "description": "insert userId"
          },
          {
            "name": "productId",
            "in": "query",
            "type": "string",
            "required": true,
            "example": "5f3fd3a4b6f932484ed2469b",
            "description": "insert product_id."
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfull",
            "schema": {
              "$ref": "#/definitions/user_response"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "user_registration": {
      "required": [
        "username",
        "password",
        "phone"
      ],
      "properties": {
        "username": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "number"
        },
        "isAdmin": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "user_login": {
      "required": [
        "username",
        "password",
        "client_id",
        "client_secret",
        "grant_type"
      ],
      "properties": {
        "username": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "grant_type": {
          "type": "string",
          "default": "password"
        }
      }
    },
    "user_response": {
      "required": [
        "status",
        "message"
      ],
      "properties": {
        "status": {
          "type": "number",
          "default": 200
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/user_registration"
    }
  },
  "securityDefinitions": {
    "oauth_login": {
      "type": "oauth2",
      "flow": "password",
      "description": "Login to user credentials.\nAs our outh2 server and application server is same.\nYou should use Client_id and Client_secret as null.",
      "tokenUrl": "http://localhost:5000/auth/login"
    }
  }
}